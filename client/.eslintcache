[{"D:\\my-project\\integrasi\\client\\src\\index.js":"1","D:\\my-project\\integrasi\\client\\src\\context\\cartContext.js":"2","D:\\my-project\\integrasi\\client\\src\\components\\Navbar.js":"3","D:\\my-project\\integrasi\\client\\src\\pages\\Home.js":"4","D:\\my-project\\integrasi\\client\\src\\components\\cart\\List.js":"5","D:\\my-project\\integrasi\\client\\src\\pages\\Post.js":"6","D:\\my-project\\integrasi\\client\\src\\pages\\Detail.js":"7","D:\\my-project\\integrasi\\client\\src\\components\\TableList.js":"8","D:\\my-project\\integrasi\\client\\src\\context\\globalContext.js":"9","D:\\my-project\\integrasi\\client\\src\\pages\\Login.js":"10","D:\\my-project\\integrasi\\client\\src\\App.js":"11","D:\\my-project\\integrasi\\client\\src\\components\\Loading.js":"12","D:\\my-project\\integrasi\\client\\src\\components\\home\\Card.js":"13","D:\\my-project\\integrasi\\client\\src\\pages\\Post2.js":"14","D:\\my-project\\integrasi\\client\\src\\pages\\Cart.js":"15","D:\\my-project\\integrasi\\client\\src\\components\\home\\data.js":"16","D:\\my-project\\integrasi\\client\\src\\pages\\Post3.js":"17","D:\\my-project\\integrasi\\client\\src\\components\\PrivateRoute.js":"18"},{"size":433,"mtime":1611806891042,"results":"19","hashOfConfig":"20"},{"size":1373,"mtime":1611807749447,"results":"21","hashOfConfig":"20"},{"size":1435,"mtime":1612841552176,"results":"22","hashOfConfig":"20"},{"size":1083,"mtime":1611807448953,"results":"23","hashOfConfig":"20"},{"size":828,"mtime":1611808974907,"results":"24","hashOfConfig":"20"},{"size":5267,"mtime":1612756259478,"results":"25","hashOfConfig":"20"},{"size":785,"mtime":1611810795494,"results":"26","hashOfConfig":"20"},{"size":1361,"mtime":1612843545920,"results":"27","hashOfConfig":"20"},{"size":1246,"mtime":1612758091672,"results":"28","hashOfConfig":"20"},{"size":3035,"mtime":1612759022153,"results":"29","hashOfConfig":"20"},{"size":2156,"mtime":1612841536177,"results":"30","hashOfConfig":"20"},{"size":128,"mtime":1612758957604,"results":"31","hashOfConfig":"20"},{"size":1294,"mtime":1611810628569,"results":"32","hashOfConfig":"20"},{"size":4856,"mtime":1612760856136,"results":"33","hashOfConfig":"20"},{"size":1148,"mtime":1611808954746,"results":"34","hashOfConfig":"20"},{"size":15800,"mtime":1611806693186,"results":"35","hashOfConfig":"20"},{"size":5008,"mtime":1612843145995,"results":"36","hashOfConfig":"20"},{"size":620,"mtime":1612841871226,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"xmz1k8",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"47"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"47"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\my-project\\integrasi\\client\\src\\index.js",[],["81","82"],"D:\\my-project\\integrasi\\client\\src\\context\\cartContext.js",[],"D:\\my-project\\integrasi\\client\\src\\components\\Navbar.js",["83"],"D:\\my-project\\integrasi\\client\\src\\pages\\Home.js",[],["84","85"],"D:\\my-project\\integrasi\\client\\src\\components\\cart\\List.js",["86"],"D:\\my-project\\integrasi\\client\\src\\pages\\Post.js",["87"],"import React, { useEffect, useState } from \"react\";\r\nimport { API } from \"../config/api\";\r\nimport TableList from \"../components/TableList\";\r\n\r\nconst Post = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [loadingAction, setLoadingAction] = useState(false);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [form, setForm] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n  });\r\n\r\n  const onChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const { id, title, description } = form;\r\n\r\n  const getPosts = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const posts = await API.get(\"/posts\");\r\n      setLoading(false);\r\n      setPosts(posts.data.data.posts);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const submitPost = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const body = JSON.stringify({\r\n        title,\r\n        description,\r\n      });\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      setLoadingAction(true);\r\n\r\n      const post = await API.post(\"/post\", body, config);\r\n\r\n      setLoadingAction(false);\r\n\r\n      const postResponse = post.data.data.post;\r\n\r\n      setPosts([...posts, postResponse]);\r\n\r\n      setForm({\r\n        title: \"\",\r\n        description: \"\",\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPosts();\r\n  }, []);\r\n\r\n  const DeletePost = async (id) => {\r\n    await API.delete(`/post/${id}`);\r\n\r\n    const filteredPost = posts.filter((post) => post.id != id);\r\n\r\n    setPosts(filteredPost);\r\n  };\r\n\r\n  const editPost = (id) => {\r\n    setIsEdit(true);\r\n    const filteredPost = posts.find((post) => post.id === id);\r\n    setForm({\r\n      id: filteredPost.id,\r\n      title: filteredPost.title,\r\n      description: filteredPost.description,\r\n    });\r\n  };\r\n\r\n  const updatePost = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const body = JSON.stringify({\r\n        title,\r\n        description,\r\n      });\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      setLoadingAction(true);\r\n\r\n      const postResponse = await API.patch(`/post/${id}`, body, config);\r\n\r\n      setLoadingAction(false);\r\n\r\n      const updatedPost = postResponse.data.data.post;\r\n\r\n      const updatedPosts = posts.map((post) =>\r\n        post.id === updatedPost.id ? updatedPost : post\r\n      );\r\n\r\n      setPosts(updatedPosts);\r\n\r\n      setForm({\r\n        id: null,\r\n        title: \"\",\r\n        description: \"\",\r\n      });\r\n\r\n      setIsEdit(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-3\">\r\n      <div className=\"card \">\r\n        <div className=\"card-header bg-white\">\r\n          <h2 className=\"text-center text-primary\">Post</h2>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <form onSubmit={(e) => (isEdit ? updatePost(e) : submitPost(e))}>\r\n            <div className=\"form-group\">\r\n              <label>Please Input Your Post</label>\r\n              <input\r\n                name=\"title\"\r\n                value={title}\r\n                onChange={(e) => onChange(e)}\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n              />\r\n              <small>Input your post</small>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Description</label>\r\n              <textarea\r\n                name=\"description\"\r\n                onChange={(e) => onChange(e)}\r\n                className=\"form-control\"\r\n                value={description}\r\n              ></textarea>\r\n              <small>Post Description</small>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <button className=\"btn btn-primary btn-block\" type=\"submit\">\r\n                {loadingAction\r\n                  ? \"Submitting\"\r\n                  : isEdit\r\n                  ? \"Update Post\"\r\n                  : \"Submit Todo\"}\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div className=\"card-footer bg-white\">\r\n          <h2 className=\"mb-3\">List Posts</h2>\r\n          <table className=\"table table-compact table-striped table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th>No</th>\r\n                <th>Title</th>\r\n                <th>Status</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            {loading ? (\r\n              <h3>Loading Dulu guys</h3>\r\n            ) : (\r\n              <tbody>\r\n                {posts.map((post, index) => (\r\n                  <TableList\r\n                    key={post.id}\r\n                    post={post}\r\n                    index={index}\r\n                    DeletePost={DeletePost}\r\n                    editPost={editPost}\r\n                  />\r\n                ))}\r\n              </tbody>\r\n            )}\r\n          </table>\r\n          <br />\r\n          <div>\r\n            <pre>{JSON.stringify(form, null, 2)}</pre>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","D:\\my-project\\integrasi\\client\\src\\pages\\Detail.js",["88","89"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { products } from \"../components/home/data\";\r\n\r\nconst Detail = () => {\r\n  const [product, setProduct] = useState(null);\r\n  const { id } = useParams();\r\n\r\n  const filterProduct = () => {\r\n    const filteredProduct = products.find((product) => product.id == id);\r\n\r\n    setProduct(filteredProduct);\r\n  };\r\n\r\n  useEffect(() => {\r\n    filterProduct();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {product ? (\r\n        <>\r\n          <h1>Title: {product.title}</h1>\r\n          <img src={product.imageUrl} alt=\"gambar\" />\r\n        </>\r\n      ) : (\r\n        <h1>Product dengan id {id} tidak ditemukan</h1>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Detail;\r\n","D:\\my-project\\integrasi\\client\\src\\components\\TableList.js",["90"],"D:\\my-project\\integrasi\\client\\src\\context\\globalContext.js",[],["91","92"],"D:\\my-project\\integrasi\\client\\src\\pages\\Login.js",["93"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { AppContext } from \"../context/globalContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { API, setAuthToken } from \"../config/api\";\r\n\r\nconst Login = () => {\r\n  const history = useHistory();\r\n  const [state, dispatch] = useContext(AppContext);\r\n\r\n  useEffect(() => {\r\n    if (!state.loading && state.isLogin) history.push(\"/home\");\r\n  }, [state]);\r\n\r\n  const [loginFormData, setLoginFormData] = useState({\r\n    email: \"fadhil12@gmail.com\",\r\n    password: \"12345678\",\r\n  });\r\n\r\n  const { email, password } = loginFormData;\r\n\r\n  const onChange = (e) => {\r\n    setLoginFormData({ ...loginFormData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const body = JSON.stringify({\r\n        email,\r\n        password,\r\n      });\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const user = await API.post(\"/login\", body, config);\r\n\r\n      dispatch({\r\n        type: \"LOGIN_SUCCESS\",\r\n        payload: user.data.data.user,\r\n      });\r\n\r\n      setAuthToken(user.data.data.user.token);\r\n\r\n      history.push(\"/home\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-3\">\r\n      <div className=\"card\">\r\n        <div className=\"card-header bg-white\">\r\n          <h2 className=\"text-center\">\r\n            Login To Start {state.isLogin ? \"Sudah Login\" : \"Belum Login\"}\r\n          </h2>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-3\"></div>\r\n            <div className=\"col-md-6\">\r\n              <form onSubmit={(e) => onSubmit(e)}>\r\n                <div className=\"form-group\">\r\n                  <label>Email</label>\r\n                  <input\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => onChange(e)}\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label>Password</label>\r\n                  <input\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={(e) => onChange(e)}\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <button className=\"btn btn-primary btn-block\">Login</button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <div className=\"col-md-3\"></div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <pre>{JSON.stringify(loginFormData, null, 2)}</pre>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","D:\\my-project\\integrasi\\client\\src\\App.js",["94"],"D:\\my-project\\integrasi\\client\\src\\components\\Loading.js",[],"D:\\my-project\\integrasi\\client\\src\\components\\home\\Card.js",["95"],"D:\\my-project\\integrasi\\client\\src\\pages\\Post2.js",["96","97","98"],"import React, { useState } from \"react\";\r\nimport { API } from \"../config/api\";\r\nimport TableList from \"../components/TableList\";\r\n\r\nimport { useQuery, useMutation } from \"react-query\";\r\n\r\nconst Post = () => {\r\n  const [loadingAction, setLoadingAction] = useState(false);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [form, setForm] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n  });\r\n\r\n  const { isLoading, error, data: postsData, isFetching, refetch } = useQuery(\r\n    \"getPosts\",\r\n    async () => await API.get(\"/posts\")\r\n  );\r\n\r\n  const submitPostMutation = useMutation(async () => {\r\n    try {\r\n      const body = JSON.stringify({\r\n        title,\r\n        description,\r\n      });\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const response = await API.post(\"/post\", body, config);\r\n\r\n      setForm({\r\n        title: \"\",\r\n        description: \"\",\r\n      });\r\n\r\n      refetch();\r\n      return response;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  });\r\n\r\n  const deletePostMutation = useMutation(async (payload) => {\r\n    const response = await API.delete(`/post/${payload.id}`);\r\n    refetch();\r\n    return response;\r\n  });\r\n\r\n  const onChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const { id, title, description } = form;\r\n\r\n  const submitPost = async (e) => {\r\n    e.preventDefault();\r\n    submitPostMutation.mutate();\r\n  };\r\n\r\n  const DeletePost = async (id) => {\r\n    deletePostMutation.mutate({\r\n      id,\r\n    });\r\n  };\r\n\r\n  const editPost = (id) => {\r\n    setIsEdit(true);\r\n  };\r\n\r\n  const updatePost = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const body = JSON.stringify({\r\n        title,\r\n        description,\r\n      });\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      setLoadingAction(true);\r\n\r\n      const postResponse = await API.patch(`/post/${id}`, body, config);\r\n\r\n      setLoadingAction(false);\r\n\r\n      const updatedPost = postResponse.data.data.post;\r\n\r\n      //   setPosts(updatedPosts);\r\n\r\n      setForm({\r\n        id: null,\r\n        title: \"\",\r\n        description: \"\",\r\n      });\r\n\r\n      setIsEdit(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-3\">\r\n      <div className=\"card \">\r\n        <div className=\"card-header bg-white\">\r\n          <h2 className=\"text-center text-primary\">Post</h2>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <form onSubmit={(e) => (isEdit ? updatePost(e) : submitPost(e))}>\r\n            <div className=\"form-group\">\r\n              <label>Please Input Your Post</label>\r\n              <input\r\n                name=\"title\"\r\n                value={title}\r\n                onChange={(e) => onChange(e)}\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n              />\r\n              <small>Input your post</small>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Description</label>\r\n              <textarea\r\n                name=\"description\"\r\n                onChange={(e) => onChange(e)}\r\n                className=\"form-control\"\r\n                value={description}\r\n              ></textarea>\r\n              <small>Post Description</small>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <button className=\"btn btn-primary btn-block\" type=\"submit\">\r\n                {loadingAction\r\n                  ? \"Submitting\"\r\n                  : isEdit\r\n                  ? \"Update Post\"\r\n                  : \"Submit Todo\"}\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div className=\"card-footer bg-white\">\r\n          <h2 className=\"mb-3\">List Posts</h2>\r\n          <table className=\"table table-compact table-striped table-bordered\">\r\n            <thead>\r\n              <tr>\r\n                <th>No</th>\r\n                <th>Title</th>\r\n                <th>Status</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            {isLoading ? (\r\n              <h3>Loading Dulu guys</h3>\r\n            ) : (\r\n              <tbody>\r\n                {postsData.data.data.posts.map((post, index) => (\r\n                  <TableList\r\n                    key={post.id}\r\n                    post={post}\r\n                    index={index}\r\n                    DeletePost={DeletePost}\r\n                    editPost={editPost}\r\n                  />\r\n                ))}\r\n              </tbody>\r\n            )}\r\n          </table>\r\n          <br />\r\n          <div>\r\n            <pre>{JSON.stringify(form, null, 2)}</pre>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","D:\\my-project\\integrasi\\client\\src\\pages\\Cart.js",[],"D:\\my-project\\integrasi\\client\\src\\components\\home\\data.js",[],"D:\\my-project\\integrasi\\client\\src\\pages\\Post3.js",["99"],"D:\\my-project\\integrasi\\client\\src\\components\\PrivateRoute.js",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":12,"column":9,"nodeType":"106","messageId":"107","endLine":12,"endColumn":21},{"ruleId":"100","replacedBy":"108"},{"ruleId":"102","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":13,"column":7,"nodeType":"112","endLine":21,"endColumn":9},{"ruleId":"113","severity":1,"message":"114","line":72,"column":57,"nodeType":"115","messageId":"116","endLine":72,"endColumn":59},{"ruleId":"113","severity":1,"message":"117","line":10,"column":67,"nodeType":"115","messageId":"116","endLine":10,"endColumn":69},{"ruleId":"118","severity":1,"message":"119","line":17,"column":6,"nodeType":"120","endLine":17,"endColumn":8,"suggestions":"121"},{"ruleId":"122","severity":1,"message":"123","line":35,"column":11,"nodeType":"124","endLine":35,"endColumn":26},{"ruleId":"100","replacedBy":"125"},{"ruleId":"102","replacedBy":"126"},{"ruleId":"118","severity":1,"message":"127","line":12,"column":6,"nodeType":"120","endLine":12,"endColumn":13,"suggestions":"128"},{"ruleId":"118","severity":1,"message":"129","line":56,"column":6,"nodeType":"120","endLine":56,"endColumn":8,"suggestions":"130"},{"ruleId":"110","severity":1,"message":"111","line":14,"column":7,"nodeType":"112","endLine":24,"endColumn":9},{"ruleId":"104","severity":1,"message":"131","line":15,"column":22,"nodeType":"106","messageId":"107","endLine":15,"endColumn":27},{"ruleId":"104","severity":1,"message":"132","line":15,"column":46,"nodeType":"106","messageId":"107","endLine":15,"endColumn":56},{"ruleId":"104","severity":1,"message":"133","line":95,"column":13,"nodeType":"106","messageId":"107","endLine":95,"endColumn":24},{"ruleId":"113","severity":1,"message":"114","line":78,"column":57,"nodeType":"115","messageId":"116","endLine":78,"endColumn":59},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"no-unused-vars","'cartDispatch' is assigned a value but never used.","Identifier","unusedVar",["134"],["135"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'filterProduct'. Either include it or remove the dependency array.","ArrayExpression",["136"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["134"],["135"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["137"],"React Hook useEffect has a missing dependency: 'checkUser'. Either include it or remove the dependency array.",["138"],"'error' is assigned a value but never used.","'isFetching' is assigned a value but never used.","'updatedPost' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},"Update the dependencies array to be: [filterProduct]",{"range":"145","text":"146"},"Update the dependencies array to be: [history, state]",{"range":"147","text":"148"},"Update the dependencies array to be: [checkUser]",{"range":"149","text":"150"},[461,463],"[filterProduct]",[425,432],"[history, state]",[1329,1331],"[checkUser]"]